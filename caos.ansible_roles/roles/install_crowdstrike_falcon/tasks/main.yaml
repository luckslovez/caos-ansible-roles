---
- name: 'Auth to CrowdStrike API (Unix)'
  uri:
    url: "{{ api_base_url }}/oauth2/token"
    method: POST
    body: "client_id={{ falcon_client_id }}&client_secret={{ falcon_client_secret }}"
    body_format: raw
    return_content: yes
    status_code: 201
    headers:
      Accept: "application/json"
      Content-Type: "application/x-www-form-urlencoded"
  register: crowdstrike_auth
  when: ansible_facts['os_family'] != 'Windows'

- include_tasks: dnf.yaml
  when: ansible_facts['os_family'] != 'Windows' and ansible_pkg_mgr == 'dnf'
- include_tasks: yum.yaml
  when: ansible_facts['os_family'] != 'Windows' and ansible_pkg_mgr == 'yum'
- include_tasks: apt.yaml
  when: ansible_facts['os_family'] != 'Windows' and ansible_pkg_mgr == 'apt'
- include_tasks: zyp.yaml
  when: ansible_facts['os_family'] != 'Windows' and ansible_pkg_mgr == 'zypper'
- include_tasks: mac.yaml
  when: ansible_facts['os_family'] == 'Darwin'
- include_tasks: win.yaml
  when: ansible_os_family == 'Windows'

- name: 'Register host with CrowdStrike (Linux)'
  shell: /opt/CrowdStrike/falconctl -s -f --cid={{ falcon_customer_id }}
  become: true
  when: ansible_facts['os_family'] not in ['Darwin', 'Windows']

- name: 'Start CrowdStrike service (Linux)'
  service:
    name: falcon-sensor
    state: started
    enabled: yes
  become: true
  when: ansible_facts['os_family'] not in ['Darwin', 'Windows']
...
